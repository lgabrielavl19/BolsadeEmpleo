/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package swingcrud;

import com.sun.tools.javac.util.Convert;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author LINA GABRIELA VILLALBA
 *         MAYRA ALEJANDRA SERRANO
 */
public class BolsaEmpleo extends javax.swing.JFrame {

    /**
     * Creates new form BolsaEmpleo
     */
    Connection con;
    Statement st;
    ArrayList<Aspirante> aspirantes = new ArrayList<>();

    public BolsaEmpleo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCedula = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNombreCompleto = new javax.swing.JTextField();
        txtEdad = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudents = new javax.swing.JTable();
        btnSave = new javax.swing.JButton();
        btnDelete1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtExperiencia = new javax.swing.JTextField();
        txtProfesion = new javax.swing.JTextField();
        btnSave1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblStudents1 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        txtCedula1 = new javax.swing.JTextField();
        btnSave2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        btnSave3 = new javax.swing.JButton();
        btnSave4 = new javax.swing.JButton();
        btnSave5 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtMenorExperiencia = new javax.swing.JTextField();
        btnDelete2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BOLSA DE EMPLEO");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel1.setText("Cédula");

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel2.setText("Nombre");

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel3.setText("Edad");

        tblStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cédula", "Nombre Completo", "Edad", "Experiencia", "Profesión", "Teléfono"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblStudents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStudentsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblStudents);
        if (tblStudents.getColumnModel().getColumnCount() > 0) {
            tblStudents.getColumnModel().getColumn(1).setHeaderValue("Nombre Completo");
            tblStudents.getColumnModel().getColumn(2).setHeaderValue("Edad");
        }

        btnSave.setText("Guardar");
        btnSave.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSave.setIconTextGap(0);
        btnSave.setInheritsPopupMenu(true);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete1.setText("Contratar");
        btnDelete1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("BOLSA DE EMPLEO HYG");

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel5.setText("Profesión");

        jLabel6.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel6.setText("Experiencia");

        jLabel7.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel7.setText("Télefono");

        btnSave1.setText("Ver Cédulas");
        btnSave1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSave1.setIconTextGap(0);
        btnSave1.setInheritsPopupMenu(true);
        btnSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave1ActionPerformed(evt);
            }
        });

        tblStudents1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cédula"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblStudents1.setColumnSelectionAllowed(false);
        tblStudents1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStudents1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblStudents1);

        jLabel8.setText("Buscar aspirante por # Cédula");

        btnSave2.setText("Buscar");
        btnSave2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSave2.setIconTextGap(0);
        btnSave2.setInheritsPopupMenu(true);
        btnSave2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave2ActionPerformed(evt);
            }
        });

        jLabel9.setText("Buscar aspirante por Nombre");

        btnSave3.setText("Mayor Experiencia");
        btnSave3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSave3.setIconTextGap(0);
        btnSave3.setInheritsPopupMenu(true);
        btnSave3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave3ActionPerformed(evt);
            }
        });

        btnSave4.setText("Más Joven");
        btnSave4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSave4.setIconTextGap(0);
        btnSave4.setInheritsPopupMenu(true);
        btnSave4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave4ActionPerformed(evt);
            }
        });

        btnSave5.setText("Promedio Edad");
        btnSave5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSave5.setIconTextGap(0);
        btnSave5.setInheritsPopupMenu(true);
        btnSave5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave5ActionPerformed(evt);
            }
        });

        jLabel10.setText("El promedio de edad de los aspirantes es de:");

        jLabel11.setText("0");

        jLabel12.setText("Eliminar aspirantes con experiencia menor a:");

        btnDelete2.setText("Eliminar");
        btnDelete2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDelete2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNombreCompleto, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtProfesion, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 615, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtExperiencia, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCedula1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnSave2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnSave3)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnSave4))
                                    .addComponent(btnSave5)
                                    .addComponent(btnDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(47, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(265, 265, 265))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(198, 198, 198)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMenorExperiencia, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDelete2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(312, 312, 312)
                        .addComponent(jLabel4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombreCompleto, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSave1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtExperiencia, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtCedula1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSave2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSave3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSave4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSave5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtProfesion, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtMenorExperiencia, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelete2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jLabel1.getAccessibleContext().setAccessibleName("Cedula");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /*
    Método Guardar Aspirante en la base de datos de acuerdo a la acción del botón   
    */
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        Integer cedula = Integer.parseInt(txtCedula.getText().trim());
        String nombreCompleto = txtNombreCompleto.getText().trim();
        Integer edad = Integer.parseInt(txtEdad.getText().trim());
        Integer experiencia = Integer.parseInt(txtExperiencia.getText().trim());
        String profesion = txtProfesion.getText().trim();
        String telefono = txtTelefono.getText().trim();

        if (!cedula.toString().isEmpty() && !nombreCompleto.isEmpty() && !edad.toString().isEmpty()) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bolsa_empleo", "root", "123456789");
                String sql = "select * from aspirante where cedula='" + cedula + "'";
                st = con.createStatement();
                ResultSet rs = st.executeQuery(sql);
                if (!rs.next()) {
                    
                    saveUser(cedula, nombreCompleto, edad, experiencia, profesion, telefono);
                    DefaultTableModel model = (DefaultTableModel) tblStudents1.getModel();
                    Object[] row = new Object[6];
                    row[0] = cedula;
                    row[1] = nombreCompleto;
                    row[2] = edad;
                    row[3] = experiencia;
                    row[4] = profesion;
                    row[5] = telefono;
                    model.addRow(row);
                    
                } else {
                    alert("Por favor ingrese una cédula diferente", "Cédula ya existe");
                }

                clear();
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(BolsaEmpleo.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    con.close();
                    st.close();
                } catch (SQLException ex) {
                    Logger.getLogger(BolsaEmpleo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } //        else if (!id.matches("^[0-9]{8}$")) {
        //            alert("please provide a valid id number", "Wrong id");
        //        } 
        else {
            alert("Por favor ingresa todos los datos");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    /*
    Selecciona una cédula de la tabla para contratarlo
    */
    //set the values of a row to the textfields
    private void tblStudentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStudentsMouseClicked
        // TODO add your handling code here:
        int i = tblStudents.getSelectedRow();
        TableModel model = tblStudents.getModel();
        txtCedula.setText(model.getValueAt(i, 0).toString());
        txtNombreCompleto.setText(model.getValueAt(i, 1).toString());
        txtEdad.setText(model.getValueAt(i, 2).toString());
    }//GEN-LAST:event_tblStudentsMouseClicked

    
     /*
    Evento generado para contratar a un aspirante
    */
    //handles delete button action
    private void btnDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete1ActionPerformed
        // TODO add your handling code here:
        int i = tblStudents1.getSelectedRow();
        if (i >= 0) {
            int option = JOptionPane.showConfirmDialog(rootPane,
                    "¿Estas seguro de contratar al aspirante?", "Contratación confirmación", JOptionPane.YES_NO_OPTION);
            if (option == 0) {
                TableModel model = tblStudents1.getModel();

                String id = model.getValueAt(i, 0).toString();
                if (tblStudents1.getSelectedRows().length == 1) {
                    delete(id);
                    DefaultTableModel model1 = (DefaultTableModel) tblStudents1.getModel();
                    model1.setRowCount(0);
                    fetch();
                    clear();
                }
            }
        } else {
            alert("Please select a row to delete");
        }
    }//GEN-LAST:event_btnDelete1ActionPerformed

    private void btnSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave1ActionPerformed
        fetch();
    }//GEN-LAST:event_btnSave1ActionPerformed

    private void tblStudents1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStudents1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblStudents1MouseClicked

    /*
    Evento Generado para buscar al aspirante por nombre y cedula
    */
    private void btnSave2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave2ActionPerformed
        clear();
        if (!txtCedula1.getText().trim().isEmpty()) {
            busquedaAspiranteCedula();
        } else if (!txtNombre.getText().trim().isEmpty()) {
            busquedaAspiranteNombre();
        }
    }//GEN-LAST:event_btnSave2ActionPerformed

    /*
    Evento Generado para buscar al aspirante con la mayor experiencia
    */
    private void btnSave3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave3ActionPerformed
        busquedaAspiranteMayorExperiencia();        // TODO add your handling code here:
    }//GEN-LAST:event_btnSave3ActionPerformed

    /*
    Evento Generado para buscar al aspirante mas joven
    */
    private void btnSave4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave4ActionPerformed
        busquedaAspitanteMasJoven();        // TODO add your handling code here:
    }//GEN-LAST:event_btnSave4ActionPerformed

     /*
    Evento Generado para hallar el promedio de edad de los aspirantes
    */
    private void btnSave5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave5ActionPerformed
        promedioEdadAspirantes();// TODO add your handling code here:
    }//GEN-LAST:event_btnSave5ActionPerformed

     /*
    Evento generado para eliminar los aspirantes dependiendo dada una experiencia
    */
    private void btnDelete2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete2ActionPerformed
        // TODO add your handling code here:
                String experiencia = txtMenorExperiencia.getText().trim();
         
                    eliminarExperienciaMenor(Integer.parseInt(experiencia));
                    DefaultTableModel model1 = (DefaultTableModel) tblStudents1.getModel();
                    model1.setRowCount(0);
                    fetch();
                    clear();
                
    }//GEN-LAST:event_btnDelete2ActionPerformed

     /*
    Metodo para mostrar alertas
    */
    public void alert(String msg) {
        JOptionPane.showMessageDialog(rootPane, msg);
    }

     /*
    Metodo para mostrar alertas
    */
    public void alert(String msg, String title) {
        JOptionPane.showMessageDialog(rootPane, msg, title, JOptionPane.ERROR_MESSAGE);
    }

    //Método para guardar un aspirante en la bd
    public void saveUser(Integer cedula, String nombre_completo, Integer edad, Integer experiencia, String profesion, String telefono) {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bolsa_empleo", "root", "123456789");
            String sql = "INSERT INTO `aspirante`(`cedula`, `nombre_completo`, `edad`, `experiencia`, `profesion`, `telefono`) "
                    + "VALUES ('" + cedula + "','" + nombre_completo + "','" + edad + "','" + experiencia + "','" + profesion + "','" + telefono + "')";
            st = con.createStatement();
            st.execute(sql);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(BolsaEmpleo.class.getName()).log(Level.SEVERE, null, ex);
        }
//        fetch();
    }

    //Metodo para actualizar un aspirante en la bd
    public void update(String fname, String lname, String id) {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bolsa_empleo", "root", "123456789");
            String sql = "UPDATE `student`SET fname='" + fname + "',lname='" + lname + "'WHERE id_number='" + id + "'";
            st = con.createStatement();
            st.execute(sql);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(BolsaEmpleo.class.getName()).log(Level.SEVERE, null, ex);
        }
//        fetch();
    }

    //metodo para eliminar los aspirantes que tengan una experiencia menor a:
     public void eliminarExperienciaMenor(Integer experiencia) {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bolsa_empleo", "root", "123456789");
            String sql = "DELETE FROM `aspirante` WHERE experiencia <" + experiencia + "";
            st = con.createStatement();
            st.execute(sql);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(BolsaEmpleo.class.getName()).log(Level.SEVERE, null, ex);
        }
//        fetch();
    }
    
    
     //metodo que se utiliza para el evento de contratación
    public void delete(String id) {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bolsa_empleo", "root", "123456789");
            String sql = "DELETE FROM `aspirante` WHERE cedula=" + id + "";
            st = con.createStatement();
            st.execute(sql);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(BolsaEmpleo.class.getName()).log(Level.SEVERE, null, ex);
        }
//        fetch();
    }

    //metodo para limpiar los campos al guardar
    private void clear() {
        txtCedula.setText("");
        txtNombreCompleto.setText("");
        txtEdad.setText("");
        txtExperiencia.setText("");
        txtProfesion.setText("");
        txtTelefono.setText("");
   }

    //Buscar todos los aspirantes
    private void fetch() {
        aspirantes.clear();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bolsa_empleo", "root", "123456789");
            String sql = "select * from aspirante";
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                Aspirante user = new Aspirante(rs.getInt("cedula"),
                        rs.getString("nombre_completo"),
                        rs.getInt("edad"),
                        rs.getInt("experiencia"),
                        rs.getString("profesion"),
                        rs.getString("telefono"));
                aspirantes.add(user);
            }
            DefaultTableModel model = (DefaultTableModel) tblStudents1.getModel();
                if (model.getRowCount() > 0) {
                    for (int i = model.getRowCount() - 1; i > -1; i--) {
                        model.removeRow(i);
                    }
                }
            
            for (Aspirante user : aspirantes) {
                
                Object[] row = new Object[1];
                row[0] = user.getCedula();

                model.addRow(row);
            }

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(BolsaEmpleo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    //metodo para realizar el promedio de edad de los aspirantes
    private void promedioEdadAspirantes() {
        
        Integer suma = 0, promedio = 0;

        for (Aspirante user : aspirantes) {
            suma += user.edad;
        }
        promedio = suma / aspirantes.size();
        jLabel11.setText(promedio.toString());
    }
    
    //Metodo para buscar el aspirante mas joven
    private void busquedaAspitanteMasJoven() {
        DefaultTableModel model1 = (DefaultTableModel) tblStudents.getModel();
        Integer num1 = 0;

        for (Aspirante user : aspirantes) {

            if (user.getEdad() < aspirantes.get(0).edad && user.getEdad() < (num1 == 0 ? 999999 : num1)) {

                if (model1.getRowCount() > 0) {
                    for (int i = model1.getRowCount() - 1; i > -1; i--) {
                        model1.removeRow(i);
                    }
                }
                Object[] row = new Object[6];
                row[0] = user.getCedula();
                row[1] = user.getNombreCompleto();
                row[2] = user.getEdad();
                row[3] = user.getExperiencia();
                row[4] = user.getProfesion();
                row[5] = user.getTelefono();

                num1 = user.getEdad();
                model1.addRow(row);
            }
        }
    }

    //metodo para buscar el aspirnate con mayor experiencia
    private void busquedaAspiranteMayorExperiencia() {
        DefaultTableModel model1 = (DefaultTableModel) tblStudents.getModel();
        Integer num1 = 0;

        for (Aspirante user : aspirantes) {

            if (user.getExperiencia() > aspirantes.get(0).experiencia && num1 < user.getExperiencia()) {
                if (model1.getRowCount() > 0) {
                    for (int i = model1.getRowCount() - 1; i > -1; i--) {
                        model1.removeRow(i);
                    }
                }

                Object[] row = new Object[6];
                row[0] = user.getCedula();
                row[1] = user.getNombreCompleto();
                row[2] = user.getEdad();
                row[3] = user.getExperiencia();
                row[4] = user.getProfesion();
                row[5] = user.getTelefono();

                num1 = user.getExperiencia();
                model1.addRow(row);
            }
        }
    }

    //Busqueda por Nombre
    private void busquedaAspiranteNombre() {
        aspirantes.clear();
        String nombre = txtNombre.getText().trim();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bolsa_empleo", "root", "123456789");
            String sql = "select * from aspirante where nombre_completo like '%" + nombre + "%'";
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {

                Aspirante user = new Aspirante(rs.getInt("cedula"),
                        rs.getString("nombre_completo"),
                        rs.getInt("edad"),
                        rs.getInt("experiencia"),
                        rs.getString("profesion"),
                        rs.getString("telefono"));
                aspirantes.add(user);
            }
            DefaultTableModel model1 = (DefaultTableModel) tblStudents.getModel();

            if (model1.getRowCount() > 0) {
                for (int i = model1.getRowCount() - 1; i > -1; i--) {
                    model1.removeRow(i);
                }
            }

            for (Aspirante user : aspirantes) {

                Object[] row = new Object[6];
                row[0] = user.getCedula();
                row[1] = user.getNombreCompleto();
                row[2] = user.getEdad();
                row[3] = user.getExperiencia();
                row[4] = user.getProfesion();
                row[5] = user.getTelefono();

                model1.addRow(row);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(BolsaEmpleo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    //Busqueda por cedula
    private void busquedaAspiranteCedula() {
        aspirantes.clear();
        Integer cedula = Integer.parseInt(txtCedula1.getText().trim());
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bolsa_empleo", "root", "123456789");
            String sql = "select * from aspirante where cedula='" + cedula + "'";
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {

                Aspirante user = new Aspirante(rs.getInt("cedula"),
                        rs.getString("nombre_completo"),
                        rs.getInt("edad"),
                        rs.getInt("experiencia"),
                        rs.getString("profesion"),
                        rs.getString("telefono"));
                aspirantes.add(user);
            }
            DefaultTableModel model1 = (DefaultTableModel) tblStudents.getModel();

            if (model1.getRowCount() > 0) {
                for (int i = model1.getRowCount() - 1; i > -1; i--) {
                    model1.removeRow(i);
                }
            }

            for (Aspirante user : aspirantes) {

                Object[] row = new Object[6];
                row[0] = user.getCedula();
                row[1] = user.getNombreCompleto();
                row[2] = user.getEdad();
                row[3] = user.getExperiencia();
                row[4] = user.getProfesion();
                row[5] = user.getTelefono();

                model1.addRow(row);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(BolsaEmpleo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BolsaEmpleo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BolsaEmpleo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BolsaEmpleo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BolsaEmpleo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new BolsaEmpleo().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete1;
    private javax.swing.JButton btnDelete2;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSave1;
    private javax.swing.JButton btnSave2;
    private javax.swing.JButton btnSave3;
    private javax.swing.JButton btnSave4;
    private javax.swing.JButton btnSave5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblStudents;
    private javax.swing.JTable tblStudents1;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtCedula1;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtExperiencia;
    private javax.swing.JTextField txtMenorExperiencia;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreCompleto;
    private javax.swing.JTextField txtProfesion;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
